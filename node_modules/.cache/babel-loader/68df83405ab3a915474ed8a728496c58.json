{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\koding\\\\coursera\\\\reacties\\\\corona-app\\\\src\\\\components\\\\CasesByCountry.js\";\n\nconst CasesByCountry = ({\n  countries\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"titleTable\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-danger\",\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-danger\",\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-danger\",\n          children: \"Active Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-danger\",\n          children: \"Today Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-danger\",\n          children: \"Case/Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-danger\",\n          children: \"Pop./Death\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-danger\",\n          children: \"Death/Recv.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: countries.map((countryData, key) => {\n        let caseTest = parseFloat(countryData.cases / countryData.tests).toFixed(2);\n        let deathPop = parseInt(countryData.population / countryData.deaths);\n        let deathRecv = parseFloat(countryData.deaths / countryData.recovered).toFixed(2);\n\n        if (caseTest == Infinity) {\n          caseTest = \"NaN\";\n        }\n\n        if (deathRecv == Infinity) {\n          deathRecv = \"NaN\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: key + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: countryData.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2\",\n            children: countryData.cases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2\",\n            children: countryData.todayCases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2\",\n            children: caseTest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2\",\n            children: deathPop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2\",\n            children: deathRecv\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_c = CasesByCountry;\nexport default CasesByCountry;\n\nvar _c;\n\n$RefreshReg$(_c, \"CasesByCountry\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/koding/coursera/reacties/corona-app/src/components/CasesByCountry.js"],"names":["CasesByCountry","countries","map","countryData","key","caseTest","parseFloat","cases","tests","toFixed","deathPop","parseInt","population","deaths","deathRecv","recovered","Infinity","country","todayCases"],"mappings":";;;;AAAA,MAAMA,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACtC,sBACI;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA,6BACI;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAYQ;AAAA,gBAEKA,SAAS,CAACC,GAAV,CAAc,CAACC,WAAD,EAAcC,GAAd,KAAsB;AACjC,YAAIC,QAAQ,GAAGC,UAAU,CAACH,WAAW,CAACI,KAAZ,GAAoBJ,WAAW,CAACK,KAAjC,CAAV,CAAkDC,OAAlD,CAA0D,CAA1D,CAAf;AACA,YAAIC,QAAQ,GAAGC,QAAQ,CAACR,WAAW,CAACS,UAAZ,GAAyBT,WAAW,CAACU,MAAtC,CAAvB;AACA,YAAIC,SAAS,GAAGR,UAAU,CAACH,WAAW,CAACU,MAAZ,GAAqBV,WAAW,CAACY,SAAlC,CAAV,CAAuDN,OAAvD,CAA+D,CAA/D,CAAhB;;AACA,YAAIJ,QAAQ,IAAIW,QAAhB,EAA0B;AACtBX,UAAAA,QAAQ,GAAG,KAAX;AACH;;AACD,YAAIS,SAAS,IAAIE,QAAjB,EAA2B;AACvBF,UAAAA,SAAS,GAAG,KAAZ;AACH;;AACD,4BACI;AAAA,kCACI;AAAA,sBAAKV,GAAG,GAAG;AAAX;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,mCAAqB;AAAA,wBAASD,WAAW,CAACc;AAArB;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,sBAAsBd,WAAW,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,sBAAsBJ,WAAW,CAACe;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,sBAAsBb;AAAtB;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,sBAAsBK;AAAtB;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,sBAAsBI;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA,WAASV,GAAT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH,OArBA;AAFL;AAAA;AAAA;AAAA;AAAA,YAZR;AAAA,kBADJ;AA0CH,CA3CD;;KAAMJ,c;AA4CN,eAAeA,cAAf","sourcesContent":["const CasesByCountry = ({ countries }) => {\r\n    return (\r\n        <>\r\n            <thead className=\"titleTable\">\r\n                <tr>\r\n                    <th className=\"bg-dark text-danger\">#</th>\r\n                    <th className=\"bg-dark text-danger\">Country</th>\r\n                    <th className=\"bg-dark text-danger\">Active Cases</th>\r\n                    <th className=\"bg-dark text-danger\">Today Cases</th>\r\n                    <th className=\"bg-dark text-danger\">Case/Test</th>\r\n                    <th className=\"bg-dark text-danger\">Pop./Death</th>\r\n                    <th className=\"bg-dark text-danger\">Death/Recv.</th>\r\n                </tr>\r\n            </thead>\r\n                <tbody>\r\n\r\n                    {countries.map((countryData, key) => {\r\n                        let caseTest = parseFloat(countryData.cases / countryData.tests).toFixed(2);\r\n                        let deathPop = parseInt(countryData.population / countryData.deaths);\r\n                        let deathRecv = parseFloat(countryData.deaths / countryData.recovered).toFixed(2);\r\n                        if (caseTest == Infinity) {\r\n                            caseTest = \"NaN\";\r\n                        }\r\n                        if (deathRecv == Infinity) {\r\n                            deathRecv = \"NaN\";\r\n                        }\r\n                        return (\r\n                            <tr key={key}>\r\n                                <td>{key + 1}</td>\r\n                                <td className=\"pl-2\"><strong>{countryData.country}</strong></td>\r\n                                <td className=\"pl-2\">{countryData.cases}</td>\r\n                                <td className=\"pl-2\">{countryData.todayCases}</td>\r\n                                <td className=\"pl-2\">{caseTest}</td>\r\n                                <td className=\"pl-2\">{deathPop}</td>\r\n                                <td className=\"pl-2\">{deathRecv}</td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\nexport default CasesByCountry;\r\n"]},"metadata":{},"sourceType":"module"}