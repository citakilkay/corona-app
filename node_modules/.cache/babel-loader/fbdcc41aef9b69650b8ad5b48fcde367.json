{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\koding\\\\coursera\\\\reacties\\\\corona-app\\\\src\\\\components\\\\CasesByCountry.js\",\n    _s = $RefreshSig$();\n\nimport numeral from \"numeral\";\nimport { useState } from 'react';\n\nconst CasesByCountry = ({\n  countries\n}) => {\n  _s();\n\n  const [sortedByTitle, setSortedByTitle] = useState();\n\n  class FilteredDatas {\n    constructor(caseTest, deathPop, deathRecv, todayCases, totalCases, countryName) {\n      this.caseTest = caseTest;\n      this.deathPop = deathPop;\n      this.deathRecv = deathRecv;\n      this.todayCases = todayCases;\n      this.totalCases = totalCases;\n      this.countryName = countryName;\n    }\n\n  }\n\n  const dataArray = [];\n  countries.map((countryData, key) => {\n    let caseTest = parseFloat(countryData.cases / countryData.tests).toFixed(2);\n    let deathPop = numeral(parseInt(countryData.population / countryData.deaths)).format('0,0');\n    let deathRecv = parseFloat(countryData.deaths / countryData.recovered).toFixed(2);\n    let todayCases = numeral(countryData.todayCases).format('0,0');\n    let totalCases = numeral(countryData.active).format('0,0');\n\n    if (caseTest == Infinity) {\n      caseTest = \"NaN\";\n    }\n\n    if (deathRecv == Infinity) {\n      deathRecv = \"NaN\";\n    }\n\n    const filteredData = new FilteredDatas(caseTest, deathPop, deathRecv, todayCases, totalCases, countryData.country);\n    dataArray.push(filteredData);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"titleTable\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          onClick: () => setSortedByTitle(\"countryName\"),\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          onClick: () => setSortedByTitle(\"totalCases\"),\n          children: \"Active Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          onClick: () => set,\n          children: \"Today Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Case/Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Pop./Death\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Death/Recv.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: dataArray.map((countryData, key) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-right\",\n            children: key + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: countryData.countryName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2 text-right\",\n            children: countryData.totalCases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2 text-right\",\n            children: countryData.todayCases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2 text-right\",\n            children: countryData.caseTest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2 text-right\",\n            children: countryData.deathPop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2 text-right\",\n            children: countryData.deathRecv\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), console.log(dataArray)]\n  }, void 0, true);\n};\n\n_s(CasesByCountry, \"8D6ThG8Szw2AerjHJIZqSWnUAv0=\");\n\n_c = CasesByCountry;\nexport default CasesByCountry;\n\nvar _c;\n\n$RefreshReg$(_c, \"CasesByCountry\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/koding/coursera/reacties/corona-app/src/components/CasesByCountry.js"],"names":["numeral","useState","CasesByCountry","countries","sortedByTitle","setSortedByTitle","FilteredDatas","constructor","caseTest","deathPop","deathRecv","todayCases","totalCases","countryName","dataArray","map","countryData","key","parseFloat","cases","tests","toFixed","parseInt","population","deaths","format","recovered","active","Infinity","filteredData","country","push","set","console","log"],"mappings":"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","sourcesContent":["import numeral from \"numeral\";\r\nimport { useState } from 'react';\r\nconst CasesByCountry = ({ countries }) => {\r\n    const [sortedByTitle, setSortedByTitle] = useState();\r\n    class FilteredDatas {\r\n        constructor( caseTest, deathPop, deathRecv, todayCases, totalCases, countryName) {\r\n            this.caseTest = caseTest;\r\n            this.deathPop = deathPop;\r\n            this.deathRecv = deathRecv;\r\n            this.todayCases = todayCases;\r\n            this.totalCases = totalCases;\r\n            this.countryName = countryName;\r\n        }\r\n    }\r\n    const dataArray = [];\r\n    countries.map((countryData,key) => {\r\n        let caseTest = parseFloat(countryData.cases / countryData.tests).toFixed(2);\r\n        let deathPop = numeral(parseInt(countryData.population / countryData.deaths)).format('0,0');\r\n        let deathRecv = parseFloat(countryData.deaths / countryData.recovered).toFixed(2);\r\n        let todayCases = numeral(countryData.todayCases).format('0,0');\r\n        let totalCases = numeral(countryData.active).format('0,0');\r\n        if (caseTest == Infinity) {\r\n            caseTest = \"NaN\";\r\n        }\r\n        if (deathRecv == Infinity) {\r\n            deathRecv = \"NaN\";\r\n        }\r\n        const filteredData = new FilteredDatas(caseTest, deathPop, deathRecv, todayCases, totalCases, countryData.country);\r\n        dataArray.push(filteredData);\r\n    })\r\n    return (\r\n        <>\r\n            <thead className=\"titleTable\">\r\n                <tr>\r\n                    <th className=\"bg-dark text-light\">#</th>\r\n                    <th className=\"bg-dark text-light\" onClick={() => setSortedByTitle(\"countryName\")}>Country</th>\r\n                    <th className=\"bg-dark text-light\" onClick ={() => setSortedByTitle(\"totalCases\")}>Active Cases</th>\r\n                    <th className=\"bg-dark text-light\" onClick = {() => set}>Today Cases</th>\r\n                    <th className=\"bg-dark text-light\">Case/Test</th>\r\n                    <th className=\"bg-dark text-light\">Pop./Death</th>\r\n                    <th className=\"bg-dark text-light\">Death/Recv.</th>\r\n                </tr>\r\n            </thead>\r\n                <tbody>\r\n                    {dataArray.map((countryData, key) => {\r\n                        \r\n                        return (\r\n                            <tr key={key}>\r\n                                <td className=\"text-right\">{key + 1}</td>\r\n                                <td className=\"pl-2\"><strong>{countryData.countryName}</strong></td>\r\n                                <td className=\"pl-2 text-right\">{countryData.totalCases}</td>\r\n                                <td className=\"pl-2 text-right\">{countryData.todayCases}</td>\r\n                                <td className=\"pl-2 text-right\">{countryData.caseTest}</td>\r\n                                <td className=\"pl-2 text-right\">{countryData.deathPop}</td>\r\n                                <td className=\"pl-2 text-right\">{countryData.deathRecv}</td>\r\n                            </tr>\r\n                        );\r\n                        })\r\n                    }\r\n                </tbody>\r\n            {console.log(dataArray)}\r\n        </>\r\n    )\r\n}\r\nexport default CasesByCountry;\r\n"]},"metadata":{},"sourceType":"module"}