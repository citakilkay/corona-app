{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\koding\\\\coursera\\\\reacties\\\\corona-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport \"leaflet/dist/leaflet.css\";\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport axios from 'axios';\nimport CasesByCountry from './components/CasesByCountry';\nimport HeaderCards from './components/HeaderCards';\nimport FormControl from './components/FormControl';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/style.css';\nimport MapLeaflet from './components/MapLeaflet';\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [isLoadingTable, setIsLoadingTable] = useState(true);\n  const [cardData, setCardData] = useState([]);\n  const [isLoadingCard, setIsLoadingCard] = useState(true);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 37.80746,\n    lng: -80.4796\n  });\n  const [mapZoom, setMapZoom] = useState(5);\n  const [lineData, setLineData] = useState({});\n  /*const [getCardInfos, setGetCardInfos] = useState(\"https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true\");\n  const [selectedCountry, setSelectedCountry] = useState(\"WorldWide\");*/\n\n  const onChangeCountry = async e => {\n    const countryCode = e.target.value;\n    const urlCards = countryCode === \"WorldWide\" ? `https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true` : `https://disease.sh/v3/covid-19/countries/${countryCode}?yesterday=false&twoDaysAgo=false&strict=false&allowNull=false`;\n    const resultOption = await axios(urlCards);\n    setCardData(resultOption.data);\n    setMapCenter([resultOption.data.countryInfo.lat, resultOption.data.countryInfo.long]);\n    setMapZoom(4);\n    setIsLoadingCard(false);\n    const urlLineData = countryCode;\n    setLineData();\n    /* console.log(e.target.value);\n     await setSelectedCountry(e.target.value).then(() => {\n       console.log(selectedCountry);\n       setGetCardInfos(selectedCountry === \"WorldWide\" ? `https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true` :\n         `https://disease.sh/v3/covid-19/countries/${selectedCountry}?yesterday=true&twoDaysAgo=true&strict=true&allowNull=true`)\n     }).then(async () => {\n       console.log(getCardInfos);\n       const resultOption = await axios(getCardInfos)\n       setCardData(resultOption.data)\n       setIsLoadingCard(false);\n       console.log(cardData);\n     })\n     */\n  };\n\n  useEffect(async () => {\n    const result = await axios(`https://disease.sh/v3/covid-19/countries?yesterday=true&twoDaysAgo=true&sort=active&allowNull=true`);\n    setCountries(result.data);\n    setIsLoadingTable(false);\n    const resultOption = await axios(`https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true`);\n    setCardData(resultOption.data);\n    setIsLoadingCard(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-center\",\n                children: \"COVID-19 TRACKER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                countries: countries,\n                onChangeCountry: onChangeCountry\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(HeaderCards, {\n                cardData: cardData,\n                isLoadingCard: isLoadingCard\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MapLeaflet, {\n            mapCenter: mapCenter,\n            mapZoom: mapZoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableDiv\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"tableComponent\",\n              children: /*#__PURE__*/_jsxDEV(CasesByCountry, {\n                countries: countries,\n                isLoadingTable: isLoadingTable\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"+NfyWzl+NICgdqPYKyP6tufyric=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/koding/coursera/reacties/corona-app/src/App.js"],"names":["useState","useEffect","Table","Container","Row","Col","axios","CasesByCountry","HeaderCards","FormControl","MapLeaflet","App","countries","setCountries","isLoadingTable","setIsLoadingTable","cardData","setCardData","isLoadingCard","setIsLoadingCard","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","lineData","setLineData","onChangeCountry","e","countryCode","target","value","urlCards","resultOption","data","countryInfo","long","urlLineData","result"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport \"leaflet/dist/leaflet.css\";\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport axios from 'axios';\nimport CasesByCountry from './components/CasesByCountry';\nimport HeaderCards from './components/HeaderCards';\nimport FormControl from './components/FormControl';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/style.css';\nimport MapLeaflet from './components/MapLeaflet'\n\n\nconst App =() => {\n  const [countries,setCountries] = useState([]);\n  const [isLoadingTable, setIsLoadingTable] = useState(true);\n  const [cardData,setCardData] = useState([]);\n  const [isLoadingCard, setIsLoadingCard] = useState(true);\n  const [mapCenter, setMapCenter] = useState({ lat: 37.80746, lng: -80.4796});\n  const [mapZoom, setMapZoom] = useState(5);\n  const [lineData, setLineData] = useState({});\n  \n  /*const [getCardInfos, setGetCardInfos] = useState(\"https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true\");\n  const [selectedCountry, setSelectedCountry] = useState(\"WorldWide\");*/\n  const onChangeCountry = async (e) => {\n    const countryCode = e.target.value;\n    const urlCards = (countryCode === \"WorldWide\" ? `https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true` :\n      `https://disease.sh/v3/covid-19/countries/${countryCode}?yesterday=false&twoDaysAgo=false&strict=false&allowNull=false`)\n    const resultOption = await axios(urlCards);\n    setCardData(resultOption.data);\n    setMapCenter([resultOption.data.countryInfo.lat, resultOption.data.countryInfo.long]);\n    setMapZoom(4);\n    setIsLoadingCard(false);\n    const urlLineData = (countryCode);\n    setLineData();\n    \n   /* console.log(e.target.value);\n    await setSelectedCountry(e.target.value).then(() => {\n      console.log(selectedCountry);\n      setGetCardInfos(selectedCountry === \"WorldWide\" ? `https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true` :\n        `https://disease.sh/v3/covid-19/countries/${selectedCountry}?yesterday=true&twoDaysAgo=true&strict=true&allowNull=true`)\n    }).then(async () => {\n      console.log(getCardInfos);\n      const resultOption = await axios(getCardInfos)\n      setCardData(resultOption.data)\n      setIsLoadingCard(false);\n      console.log(cardData);\n    })\n    */\n  }\n\n  useEffect(async () => {\n    const result = await axios(`https://disease.sh/v3/covid-19/countries?yesterday=true&twoDaysAgo=true&sort=active&allowNull=true`);\n    setCountries(result.data);\n    setIsLoadingTable(false);\n    const resultOption = await axios(`https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true`);\n    setCardData(resultOption.data);\n    setIsLoadingCard(false);\n  }, []);\n  return (\n    <>\n        <Container fluid={true}>\n          <Row className=\"my-4\">\n            <Col xs={12} md={6}>\n              <Row>\n                <Col xs={12} sm={8}>\n                  <h1 className=\"text-center\">COVID-19 TRACKER</h1>\n                </Col>\n                <Col xs={12} sm={4}>\n                  <FormControl countries={countries} onChangeCountry={onChangeCountry}/>\n                </Col>\n                <Col xs={12}>\n                  <HeaderCards cardData={cardData} isLoadingCard={isLoadingCard}/>\n                </Col>\n              </Row>\n              <MapLeaflet mapCenter = {mapCenter} mapZoom={mapZoom}/>\n            </Col>\n            <Col xs={12} md={6}>\n            <div className=\"tableDiv\">\n              <Table className=\"tableComponent\">\n                <CasesByCountry countries={countries} isLoadingTable={isLoadingTable}/>\n              </Table>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}