{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\koding\\\\coursera\\\\reacties\\\\corona-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport \"leaflet/dist/leaflet.css\";\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport axios from 'axios';\nimport CasesByCountry from './components/CasesByCountry';\nimport HeaderCards from './components/HeaderCards';\nimport FormControl from './components/FormControl';\nimport LineGraph from './components/LineGraph';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/style.css';\nimport MapLeaflet from './components/MapLeaflet';\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [cardData, setCardData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 37.80746,\n    lng: -80.4796\n  });\n  const [mapZoom, setMapZoom] = useState(5);\n  const [historicalDeaths, setHistoricalDeaths] = useState([]);\n  const [historicalCases, setHistoricalCases] = useState([]);\n  const [historicalDates, setHistoricalDates] = useState([]);\n  /*const [getCardInfos, setGetCardInfos] = useState(\"https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true\");\n  const [selectedCountry, setSelectedCountry] = useState(\"WorldWide\");*/\n\n  const onChangeCountry = async e => {\n    const countryCode = e.target.value;\n    const urlCards = countryCode === \"WorldWide\" ? `https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true` : `https://disease.sh/v3/covid-19/countries/${countryCode}?yesterday=false&twoDaysAgo=false&strict=false&allowNull=false`;\n    const resultOption = await axios(urlCards);\n    setCardData(resultOption.data);\n    setMapCenter(countryCode === \"WorldWide\" ? [37.80746, -80.4796] : [resultOption.data.countryInfo.lat, resultOption.data.countryInfo.long]);\n    setMapZoom(4);\n    const urlLineData = countryCode === \"WorldWide\" ? `https://disease.sh/v3/covid-19/historical/all?lastdays=210` : `https://disease.sh/v3/covid-19/historical/${countryCode}?lastdays=210`;\n    const resultLine = await axios(urlLineData);\n    const LineArrayDeaths = [];\n    const LineArrayCases = [];\n    setHistoricalDeaths(countryCode === \"WorldWide\" ? () => {\n      for (let i = 0; i < 210; i = i + 10) {\n        LineArrayDeaths.push(Object.values(resultLine.data.deaths)[i]);\n      }\n\n      return LineArrayDeaths;\n    } : () => {\n      for (let i = 0; i < 210; i = i + 10) {\n        LineArrayDeaths.push(Object.values(resultLine.data.timeline.deaths)[i]);\n      }\n\n      return LineArrayDeaths;\n    });\n    setHistoricalCases(countryCode === \"WorldWide\" ? () => {\n      for (let i = 0; i < 210; i = i + 10) {\n        LineArrayCases.push(Object.values(resultLine.data.cases)[i]);\n      }\n\n      return LineArrayCases;\n    } : () => {\n      for (let i = 0; i < 210; i = i + 10) {\n        LineArrayCases.push(Object.values(resultLine.data.timeline.cases)[i]);\n      }\n\n      return LineArrayCases;\n    });\n    console.log(historicalCases);\n    console.log(historicalDeaths);\n    /* console.log(e.target.value);\n     await setSelectedCountry(e.target.value).then(() => {\n       console.log(selectedCountry);\n       setGetCardInfos(selectedCountry === \"WorldWide\" ? `https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true` :\n         `https://disease.sh/v3/covid-19/countries/${selectedCountry}?yesterday=true&twoDaysAgo=true&strict=true&allowNull=true`)\n     }).then(async () => {\n       console.log(getCardInfos);\n       const resultOption = await axios(getCardInfos)\n       setCardData(resultOption.data)\n       setIsLoadingCard(false);\n       console.log(cardData);\n     })\n     */\n\n    console.log(resultLine.data);\n  };\n\n  useEffect(async () => {\n    const result = await axios(`https://disease.sh/v3/covid-19/countries?yesterday=true&twoDaysAgo=true&sort=active&allowNull=true`);\n    setCountries(result.data);\n    const resultOption = await axios(`https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true`);\n    setCardData(resultOption.data);\n    const resultDefault = await axios(`https://disease.sh/v3/covid-19/historical/all?lastdays=210`);\n    const LineArrayDeaths = [];\n    const LineArrayCases = [];\n    const LineArrayDates = [];\n    setHistoricalDates(() => {\n      for (let i = 0; i < 210; i = i + 10) {}\n    });\n    setHistoricalDeaths(() => {\n      for (let i = 0; i < 210; i = i + 10) {\n        LineArrayDeaths.push(Object.values(resultDefault.data.deaths)[i]);\n      }\n\n      return LineArrayDeaths;\n    });\n    setHistoricalCases(() => {\n      for (let i = 0; i < 210; i = i + 10) {\n        LineArrayCases.push(Object.values(resultDefault.data.cases)[i]);\n      }\n\n      return LineArrayCases;\n    });\n    console.log(historicalCases);\n    console.log(historicalDeaths);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-center\",\n                children: \"COVID-19 TRACKER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                countries: countries,\n                onChangeCountry: onChangeCountry\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(HeaderCards, {\n                cardData: cardData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MapLeaflet, {\n            mapCenter: mapCenter,\n            mapZoom: mapZoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableDiv\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"tableComponent\",\n              children: /*#__PURE__*/_jsxDEV(CasesByCountry, {\n                countries: countries\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n            historicalDeaths: historicalDeaths,\n            historicalCases: historicalCases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"uOdJhBQIUthGUv3QR8bxAvbGYrk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/koding/coursera/reacties/corona-app/src/App.js"],"names":["useState","useEffect","Table","Container","Row","Col","axios","CasesByCountry","HeaderCards","FormControl","LineGraph","MapLeaflet","App","countries","setCountries","cardData","setCardData","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","historicalDeaths","setHistoricalDeaths","historicalCases","setHistoricalCases","historicalDates","setHistoricalDates","onChangeCountry","e","countryCode","target","value","urlCards","resultOption","data","countryInfo","long","urlLineData","resultLine","LineArrayDeaths","LineArrayCases","i","push","Object","values","deaths","timeline","cases","console","log","result","resultDefault","LineArrayDates"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport \"leaflet/dist/leaflet.css\";\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport axios from 'axios';\nimport CasesByCountry from './components/CasesByCountry';\nimport HeaderCards from './components/HeaderCards';\nimport FormControl from './components/FormControl';\nimport LineGraph from './components/LineGraph';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/style.css';\nimport MapLeaflet from './components/MapLeaflet';\n\n\nconst App =() => {\n  const [countries,setCountries] = useState([]);\n  const [cardData,setCardData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 37.80746, lng: -80.4796});\n  const [mapZoom, setMapZoom] = useState(5);\n  const [historicalDeaths, setHistoricalDeaths] = useState([]);\n  const [historicalCases, setHistoricalCases] = useState([]);\n  const [historicalDates, setHistoricalDates] = useState([]);\n  /*const [getCardInfos, setGetCardInfos] = useState(\"https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true\");\n  const [selectedCountry, setSelectedCountry] = useState(\"WorldWide\");*/\n  const onChangeCountry = async (e) => {\n    const countryCode = e.target.value;\n    const urlCards = (countryCode === \"WorldWide\" ? `https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true` :\n      `https://disease.sh/v3/covid-19/countries/${countryCode}?yesterday=false&twoDaysAgo=false&strict=false&allowNull=false`)\n    const resultOption = await axios(urlCards);\n    setCardData(resultOption.data);\n    setMapCenter(countryCode === \"WorldWide\" ? [37.80746, -80.4796] : [resultOption.data.countryInfo.lat, resultOption.data.countryInfo.long]);\n    setMapZoom(4);\n    const urlLineData = (countryCode === \"WorldWide\" ? `https://disease.sh/v3/covid-19/historical/all?lastdays=210` :\n      `https://disease.sh/v3/covid-19/historical/${countryCode}?lastdays=210`);\n    const resultLine = await axios(urlLineData);\n    const LineArrayDeaths = [];\n    const LineArrayCases = [];\n    setHistoricalDeaths(countryCode === \"WorldWide\" ? \n      () => {\n        for (let i = 0; i < 210; i = i + 10) {\n        LineArrayDeaths.push(Object.values(resultLine.data.deaths)[i]);\n      }\n      return LineArrayDeaths;} :\n      () => {\n        for (let i = 0; i < 210; i = i + 10) {\n          LineArrayDeaths.push(Object.values(resultLine.data.timeline.deaths)[i]);\n        }\n      return LineArrayDeaths;}\n    );\n      setHistoricalCases(countryCode === \"WorldWide\" ? () => {\n        for (let i = 0; i < 210; i = i + 10) {\n          LineArrayCases.push(Object.values(resultLine.data.cases)[i]);\n        }\n        return LineArrayCases;\n      } : () => {\n        for (let i = 0; i < 210; i = i + 10) {\n          LineArrayCases.push(Object.values(resultLine.data.timeline.cases)[i]);\n        }\n        return LineArrayCases;}\n    );\n    console.log(historicalCases);\n    console.log(historicalDeaths);\n   /* console.log(e.target.value);\n    await setSelectedCountry(e.target.value).then(() => {\n      console.log(selectedCountry);\n      setGetCardInfos(selectedCountry === \"WorldWide\" ? `https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true` :\n        `https://disease.sh/v3/covid-19/countries/${selectedCountry}?yesterday=true&twoDaysAgo=true&strict=true&allowNull=true`)\n    }).then(async () => {\n      console.log(getCardInfos);\n      const resultOption = await axios(getCardInfos)\n      setCardData(resultOption.data)\n      setIsLoadingCard(false);\n      console.log(cardData);\n    })\n    */\n    console.log(resultLine.data);\n  }\n\n  useEffect(async () => {\n    const result = await axios(`https://disease.sh/v3/covid-19/countries?yesterday=true&twoDaysAgo=true&sort=active&allowNull=true`);\n    setCountries(result.data);\n    const resultOption = await axios(`https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true`);\n    setCardData(resultOption.data);\n    const resultDefault = await axios(`https://disease.sh/v3/covid-19/historical/all?lastdays=210`);\n    const LineArrayDeaths = [];\n    const LineArrayCases = [];\n    const LineArrayDates = [];\n    setHistoricalDates(() => {\n      for(let i = 0; i < 210; i= i + 10) {\n\n      }\n    })\n    setHistoricalDeaths(() => {\n      for (let i = 0; i < 210; i = i + 10) {\n        LineArrayDeaths.push(Object.values(resultDefault.data.deaths)[i]);\n      } return LineArrayDeaths;\n    });\n    setHistoricalCases(() => {\n      for (let i = 0; i < 210; i = i + 10) {\n        LineArrayCases.push(Object.values(resultDefault.data.cases)[i]);\n      } return LineArrayCases;\n    })\n    console.log(historicalCases);\n    console.log(historicalDeaths);\n  }, []);\n  return (\n    <>\n        <Container fluid={true}>\n          <Row className=\"my-4\">\n            <Col xs={12} md={6}>\n              <Row>\n                <Col xs={12} sm={8}>\n                  <h1 className=\"text-center\">COVID-19 TRACKER</h1>\n                </Col>\n                <Col xs={12} sm={4}>\n                  <FormControl countries={countries} onChangeCountry={onChangeCountry}/>\n                </Col>\n                <Col xs={12}>\n                  <HeaderCards cardData={cardData}/>\n                </Col>\n              </Row>\n              <MapLeaflet mapCenter = {mapCenter} mapZoom={mapZoom}/>\n            </Col>\n            <Col xs={12} md={6}>\n              <div className=\"tableDiv\">\n                <Table className=\"tableComponent\">\n                  <CasesByCountry countries={countries}/>\n                </Table>\n              </div>\n              <LineGraph historicalDeaths ={historicalDeaths} historicalCases ={historicalCases}/>\n            </Col>\n          </Row>\n        </Container>\n    </>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}