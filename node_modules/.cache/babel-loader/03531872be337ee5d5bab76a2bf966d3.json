{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\koding\\\\coursera\\\\reacties\\\\corona-app\\\\src\\\\components\\\\CasesByCountry.js\";\n\nconst CasesByCountry = ({\n  countries\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Active Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Today Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Case/Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Dead/Pop.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Dead/Recv.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }, this), countries.map((countryData, key) => {\n      const caseTest = parseFloat(countryData.cases / countryData.tests).toFixed(2);\n      return /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: countryData.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: countryData.cases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: countryData.todayCases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: caseTest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: countryData.cases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: countryData.cases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_c = CasesByCountry;\nexport default CasesByCountry;\n\nvar _c;\n\n$RefreshReg$(_c, \"CasesByCountry\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/koding/coursera/reacties/corona-app/src/components/CasesByCountry.js"],"names":["CasesByCountry","countries","map","countryData","key","caseTest","parseFloat","cases","tests","toFixed","country","todayCases"],"mappings":";;;;AAAA,MAAMA,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACtC,sBACI;AAAA,4BACI;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAYKA,SAAS,CAACC,GAAV,CAAc,CAACC,WAAD,EAAcC,GAAd,KAAsB;AACjC,YAAMC,QAAQ,GAAGC,UAAU,CAACH,WAAW,CAACI,KAAZ,GAAkBJ,WAAW,CAACK,KAA/B,CAAV,CAAgDC,OAAhD,CAAwD,CAAxD,CAAjB;AACA,0BACI;AAAA,+BACI;AAAA,kCACI;AAAA,sBAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKD,WAAW,CAACO;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKP,WAAW,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAKJ,WAAW,CAACQ;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,sBAAMN;AAAN;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA,sBAAKF,WAAW,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAA,sBAAKJ,WAAW,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAYH,GAAZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH,KAfA,CAZL;AAAA,kBADJ;AA+BH,CAhCD;;KAAMJ,c;AAiCN,eAAeA,cAAf","sourcesContent":["const CasesByCountry = ({ countries }) => {\r\n    return (\r\n        <>\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Country</th>\r\n                    <th>Active Cases</th>\r\n                    <th>Today Cases</th>\r\n                    <th>Case/Test</th>\r\n                    <th>Dead/Pop.</th>\r\n                    <th>Dead/Recv.</th>\r\n                </tr>\r\n            </thead>\r\n            {countries.map((countryData, key) => {\r\n                const caseTest = parseFloat(countryData.cases/countryData.tests).toFixed(2);\r\n                return(\r\n                    <tbody key={key}>\r\n                        <tr>\r\n                            <td>{key}</td>\r\n                            <td>{countryData.country}</td>\r\n                            <td>{countryData.cases}</td>\r\n                            <td>{countryData.todayCases}</td>\r\n                            <td>{ caseTest}</td>\r\n                            <td>{countryData.cases}</td>\r\n                            <td>{countryData.cases}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                );\r\n            })}\r\n        </>\r\n    )\r\n}\r\nexport default CasesByCountry;\r\n"]},"metadata":{},"sourceType":"module"}