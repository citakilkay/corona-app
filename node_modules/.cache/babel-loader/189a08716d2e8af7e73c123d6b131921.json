{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\koding\\\\coursera\\\\reacties\\\\corona-app\\\\src\\\\components\\\\CasesByCountry.js\";\nimport numeral from \"numeral\";\n\nconst CasesByCountry = ({\n  countries\n}) => {\n  const filteredDatas = {\n    caseTest: 0,\n    daeathPop: 0,\n    deathRecv: 0,\n    todayCases: 0,\n    totalCases: 0\n  };\n  const dataArray = [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"titleTable\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Active Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Today Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Case/Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Pop./Death\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Death/Recv.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: countries.map((countryData, key) => {\n        /*\r\n        let caseTest = parseFloat(countryData.cases / countryData.tests).toFixed(2);\r\n        let deathPop = numeral(parseInt(countryData.population / countryData.deaths)).format('0,0');\r\n        let deathRecv = parseFloat(countryData.deaths / countryData.recovered).toFixed(2);\r\n        let todayCases = numeral(countryData.todayCases).format('0,0');\r\n        let totalCases = numeral(countryData.active).format('0,0');\r\n        if (caseTest == Infinity) {\r\n            caseTest = \"NaN\";\r\n        }\r\n        if (deathRecv == Infinity) {\r\n            deathRecv = \"NaN\";\r\n        }\r\n        return (\r\n            <tr key={key}>\r\n                <td className=\"text-right\">{key + 1}</td>\r\n                <td className=\"pl-2\"><strong>{countryData.country}</strong></td>\r\n                <td className=\"pl-2 text-right\">{totalCases}</td>\r\n                <td className=\"pl-2 text-right\">{todayCases}</td>\r\n                <td className=\"pl-2 text-right\">{caseTest}</td>\r\n                <td className=\"pl-2 text-right\">{deathPop}</td>\r\n                <td className=\"pl-2 text-right\">{deathRecv}</td>\r\n            </tr>\r\n        );*/\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_c = CasesByCountry;\nexport default CasesByCountry;\n\nvar _c;\n\n$RefreshReg$(_c, \"CasesByCountry\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/koding/coursera/reacties/corona-app/src/components/CasesByCountry.js"],"names":["numeral","CasesByCountry","countries","filteredDatas","caseTest","daeathPop","deathRecv","todayCases","totalCases","dataArray","map","countryData","key"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,SAApB;;AACA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACtC,QAAMC,aAAa,GAAG;AAClBC,IAAAA,QAAQ,EAAE,CADQ;AAElBC,IAAAA,SAAS,EAAE,CAFO;AAGlBC,IAAAA,SAAS,EAAE,CAHO;AAIlBC,IAAAA,UAAU,EAAE,CAJM;AAKlBC,IAAAA,UAAU,EAAE;AALM,GAAtB;AAOA,QAAMC,SAAS,GAAG,EAAlB;AACA,sBACI;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA,6BACI;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAYQ;AAAA,gBACKP,SAAS,CAACQ,GAAV,CAAc,CAACC,WAAD,EAAcC,GAAd,KAAsB;AACjC;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqB,OAxBA;AADL;AAAA;AAAA;AAAA;AAAA,YAZR;AAAA,kBADJ;AA0CH,CAnDD;;KAAMX,c;AAoDN,eAAeA,cAAf","sourcesContent":["import numeral from \"numeral\";\r\nconst CasesByCountry = ({ countries }) => {\r\n    const filteredDatas = {\r\n        caseTest: 0,\r\n        daeathPop: 0,\r\n        deathRecv: 0,\r\n        todayCases: 0,\r\n        totalCases: 0\r\n    }\r\n    const dataArray = [];\r\n    return (\r\n        <>\r\n            <thead className=\"titleTable\">\r\n                <tr>\r\n                    <th className=\"bg-dark text-light\">#</th>\r\n                    <th className=\"bg-dark text-light\">Country</th>\r\n                    <th className=\"bg-dark text-light\">Active Cases</th>\r\n                    <th className=\"bg-dark text-light\">Today Cases</th>\r\n                    <th className=\"bg-dark text-light\">Case/Test</th>\r\n                    <th className=\"bg-dark text-light\">Pop./Death</th>\r\n                    <th className=\"bg-dark text-light\">Death/Recv.</th>\r\n                </tr>\r\n            </thead>\r\n                <tbody>\r\n                    {countries.map((countryData, key) => {\r\n                        /*\r\n                        let caseTest = parseFloat(countryData.cases / countryData.tests).toFixed(2);\r\n                        let deathPop = numeral(parseInt(countryData.population / countryData.deaths)).format('0,0');\r\n                        let deathRecv = parseFloat(countryData.deaths / countryData.recovered).toFixed(2);\r\n                        let todayCases = numeral(countryData.todayCases).format('0,0');\r\n                        let totalCases = numeral(countryData.active).format('0,0');\r\n                        if (caseTest == Infinity) {\r\n                            caseTest = \"NaN\";\r\n                        }\r\n                        if (deathRecv == Infinity) {\r\n                            deathRecv = \"NaN\";\r\n                        }\r\n                        return (\r\n                            <tr key={key}>\r\n                                <td className=\"text-right\">{key + 1}</td>\r\n                                <td className=\"pl-2\"><strong>{countryData.country}</strong></td>\r\n                                <td className=\"pl-2 text-right\">{totalCases}</td>\r\n                                <td className=\"pl-2 text-right\">{todayCases}</td>\r\n                                <td className=\"pl-2 text-right\">{caseTest}</td>\r\n                                <td className=\"pl-2 text-right\">{deathPop}</td>\r\n                                <td className=\"pl-2 text-right\">{deathRecv}</td>\r\n                            </tr>\r\n                        );*/\r\n                    })}\r\n                </tbody>\r\n        </>\r\n    )\r\n}\r\nexport default CasesByCountry;\r\n"]},"metadata":{},"sourceType":"module"}