{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\koding\\\\coursera\\\\reacties\\\\corona-app\\\\src\\\\components\\\\CasesByCountry.js\";\nimport numeral from \"numeral\";\n\nconst CasesByCountry = ({\n  countries\n}) => {\n  class FilteredDatas {\n    constructor(key, caseTest, deathPop, deathRecv, todayCases, totalCases) {\n      this.key = key;\n      this.caseTest = caseTest;\n      this.daeathPop = deathPop;\n      this.deathRecv = deathRecv;\n      this.todayCases = todayCases;\n      this.totalCases = totalCases;\n    }\n\n  }\n\n  const dataArray = [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"titleTable\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Active Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Today Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Case/Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Pop./Death\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"bg-dark text-light\",\n          children: \"Death/Recv.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: countries.map((countryData, key) => {\n        let caseTest = parseFloat(countryData.cases / countryData.tests).toFixed(2);\n        let deathPop = numeral(parseInt(countryData.population / countryData.deaths)).format('0,0');\n        let deathRecv = parseFloat(countryData.deaths / countryData.recovered).toFixed(2);\n        let todayCases = numeral(countryData.todayCases).format('0,0');\n        let totalCases = numeral(countryData.active).format('0,0');\n\n        if (caseTest == Infinity) {\n          caseTest = \"NaN\";\n        }\n\n        if (deathRecv == Infinity) {\n          deathRecv = \"NaN\";\n        }\n\n        filteredDatas1 = new FilteredDatas();\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-right\",\n            children: key + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: countryData.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2 text-right\",\n            children: totalCases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2 text-right\",\n            children: todayCases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2 text-right\",\n            children: caseTest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2 text-right\",\n            children: deathPop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"pl-2 text-right\",\n            children: deathRecv\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_c = CasesByCountry;\nexport default CasesByCountry;\n\nvar _c;\n\n$RefreshReg$(_c, \"CasesByCountry\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/koding/coursera/reacties/corona-app/src/components/CasesByCountry.js"],"names":["numeral","CasesByCountry","countries","FilteredDatas","constructor","key","caseTest","deathPop","deathRecv","todayCases","totalCases","daeathPop","dataArray","map","countryData","parseFloat","cases","tests","toFixed","parseInt","population","deaths","format","recovered","active","Infinity","filteredDatas1","country"],"mappings":"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","sourcesContent":["import numeral from \"numeral\";\r\nconst CasesByCountry = ({ countries }) => {\r\n    class FilteredDatas {\r\n        constructor(key, caseTest, deathPop, deathRecv, todayCases, totalCases) {\r\n            this.key = key;\r\n            this.caseTest = caseTest;\r\n            this.daeathPop = deathPop;\r\n            this.deathRecv = deathRecv;\r\n            this.todayCases = todayCases;\r\n            this.totalCases = totalCases;\r\n        }\r\n    }\r\n    const dataArray = [];\r\n    return (\r\n        <>\r\n            <thead className=\"titleTable\">\r\n                <tr>\r\n                    <th className=\"bg-dark text-light\">#</th>\r\n                    <th className=\"bg-dark text-light\">Country</th>\r\n                    <th className=\"bg-dark text-light\">Active Cases</th>\r\n                    <th className=\"bg-dark text-light\">Today Cases</th>\r\n                    <th className=\"bg-dark text-light\">Case/Test</th>\r\n                    <th className=\"bg-dark text-light\">Pop./Death</th>\r\n                    <th className=\"bg-dark text-light\">Death/Recv.</th>\r\n                </tr>\r\n            </thead>\r\n                <tbody>\r\n                    {countries.map((countryData, key) => {\r\n                        let caseTest = parseFloat(countryData.cases / countryData.tests).toFixed(2);\r\n                        let deathPop = numeral(parseInt(countryData.population / countryData.deaths)).format('0,0');\r\n                        let deathRecv = parseFloat(countryData.deaths / countryData.recovered).toFixed(2);\r\n                        let todayCases = numeral(countryData.todayCases).format('0,0');\r\n                        let totalCases = numeral(countryData.active).format('0,0');\r\n                        if (caseTest == Infinity) {\r\n                            caseTest = \"NaN\";\r\n                        }\r\n                        if (deathRecv == Infinity) {\r\n                            deathRecv = \"NaN\";\r\n                        }\r\n                        filteredDatas1 = new FilteredDatas()\r\n                        return (\r\n                            <tr key={key}>\r\n                                <td className=\"text-right\">{key + 1}</td>\r\n                                <td className=\"pl-2\"><strong>{countryData.country}</strong></td>\r\n                                <td className=\"pl-2 text-right\">{totalCases}</td>\r\n                                <td className=\"pl-2 text-right\">{todayCases}</td>\r\n                                <td className=\"pl-2 text-right\">{caseTest}</td>\r\n                                <td className=\"pl-2 text-right\">{deathPop}</td>\r\n                                <td className=\"pl-2 text-right\">{deathRecv}</td>\r\n                            </tr>\r\n                        );\r\n                        })\r\n                    }\r\n                </tbody>\r\n        </>\r\n    )\r\n}\r\nexport default CasesByCountry;\r\n"]},"metadata":{},"sourceType":"module"}