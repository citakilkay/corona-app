{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\koding\\\\coursera\\\\reacties\\\\corona-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport \"leaflet/dist/leaflet.css\";\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport axios from 'axios';\nimport CasesByCountry from './components/CasesByCountry';\nimport HeaderCards from './components/HeaderCards';\nimport FormControl from './components/FormControl';\nimport LineGraph from './components/LineGraph';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/style.css';\nimport MapLeaflet from './components/MapLeaflet';\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [isLoadingTable, setIsLoadingTable] = useState(true);\n  const [cardData, setCardData] = useState([]);\n  const [isLoadingCard, setIsLoadingCard] = useState(true);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 37.80746,\n    lng: -80.4796\n  });\n  const [mapZoom, setMapZoom] = useState(5);\n  const [lineData, setLineData] = useState({});\n  const [historicalDeaths, setHistoricalDeaths] = useState([]);\n  /*const [getCardInfos, setGetCardInfos] = useState(\"https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true\");\n  const [selectedCountry, setSelectedCountry] = useState(\"WorldWide\");*/\n\n  const onChangeCountry = async e => {\n    const countryCode = e.target.value;\n    const urlCards = countryCode === \"WorldWide\" ? `https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true` : `https://disease.sh/v3/covid-19/countries/${countryCode}?yesterday=false&twoDaysAgo=false&strict=false&allowNull=false`;\n    const resultOption = await axios(urlCards);\n    setCardData(resultOption.data);\n    setMapCenter(countryCode === \"WorldWide\" ? [37.80746, -80.4796] : [resultOption.data.countryInfo.lat, resultOption.data.countryInfo.long]);\n    setMapZoom(4);\n    setIsLoadingCard(false);\n    const urlLineData = countryCode === \"WorldWide\" ? `https://disease.sh/v3/covid-19/historical/all?lastdays=210` : `https://disease.sh/v3/covid-19/historical/${countryCode}?lastdays=210`;\n    const resultLine = await axios(urlLineData);\n    setLineData(resultLine.data);\n    setHistoricalDeaths(countryCode === \"WorldWide\" ? [Object.values(resultLine.data.deaths)[1], Object.values(resultLine.data.deaths)[30], Object.values(resultLine.data.deaths)[60], Object.values(resultLine.data.deaths)[90], Object.values(resultLine.data.deaths)[120], Object.values(resultLine.data.deaths)[150], Object.values(resultLine.data.deaths)[180], Object.values(resultLine.data.deaths)[209]] : [Object.values(resultLine.data.timeline.deaths)[1], Object.values(resultLine.data.timeline.deaths)[30], Object.values(resultLine.data.timeline.deaths)[60], Object.values(resultLine.data.timeline.deaths)[90], Object.values(resultLine.data.timeline.deaths)[120], Object.values(resultLine.data.timeline.deaths)[150], Object.values(resultLine.data.timeline.deaths)[180], Object.values(resultLine.data.timeline.deaths)[210]]);\n    /* console.log(e.target.value);\n     await setSelectedCountry(e.target.value).then(() => {\n       console.log(selectedCountry);\n       setGetCardInfos(selectedCountry === \"WorldWide\" ? `https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true` :\n         `https://disease.sh/v3/covid-19/countries/${selectedCountry}?yesterday=true&twoDaysAgo=true&strict=true&allowNull=true`)\n     }).then(async () => {\n       console.log(getCardInfos);\n       const resultOption = await axios(getCardInfos)\n       setCardData(resultOption.data)\n       setIsLoadingCard(false);\n       console.log(cardData);\n     })\n     */\n  };\n\n  useEffect(async () => {\n    const result = await axios(`https://disease.sh/v3/covid-19/countries?yesterday=true&twoDaysAgo=true&sort=active&allowNull=true`);\n    setCountries(result.data);\n    setIsLoadingTable(false);\n    const resultOption = await axios(`https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true`);\n    setCardData(resultOption.data);\n    setIsLoadingCard(false);\n    onChangeCountry();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-center\",\n                children: \"COVID-19 TRACKER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                countries: countries,\n                onChangeCountry: onChangeCountry\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(HeaderCards, {\n                cardData: cardData,\n                isLoadingCard: isLoadingCard\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MapLeaflet, {\n            mapCenter: mapCenter,\n            mapZoom: mapZoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tableDiv\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"tableComponent\",\n              children: /*#__PURE__*/_jsxDEV(CasesByCountry, {\n                countries: countries,\n                isLoadingTable: isLoadingTable\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n            lineData: lineData,\n            historicalDeaths: historicalDeaths\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"OKhdai0fP7VNqVnWY1xLkOBaObk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/koding/coursera/reacties/corona-app/src/App.js"],"names":["useState","useEffect","Table","Container","Row","Col","axios","CasesByCountry","HeaderCards","FormControl","LineGraph","MapLeaflet","App","countries","setCountries","isLoadingTable","setIsLoadingTable","cardData","setCardData","isLoadingCard","setIsLoadingCard","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","lineData","setLineData","historicalDeaths","setHistoricalDeaths","onChangeCountry","e","countryCode","target","value","urlCards","resultOption","data","countryInfo","long","urlLineData","resultLine","Object","values","deaths","timeline","result"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport \"leaflet/dist/leaflet.css\";\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport axios from 'axios';\nimport CasesByCountry from './components/CasesByCountry';\nimport HeaderCards from './components/HeaderCards';\nimport FormControl from './components/FormControl';\nimport LineGraph from './components/LineGraph';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/style.css';\nimport MapLeaflet from './components/MapLeaflet';\n\n\nconst App =() => {\n  const [countries,setCountries] = useState([]);\n  const [isLoadingTable, setIsLoadingTable] = useState(true);\n  const [cardData,setCardData] = useState([]);\n  const [isLoadingCard, setIsLoadingCard] = useState(true);\n  const [mapCenter, setMapCenter] = useState({ lat: 37.80746, lng: -80.4796});\n  const [mapZoom, setMapZoom] = useState(5);\n  const [lineData, setLineData] = useState({});\n  const[historicalDeaths, setHistoricalDeaths] = useState([]);\n  \n  /*const [getCardInfos, setGetCardInfos] = useState(\"https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true\");\n  const [selectedCountry, setSelectedCountry] = useState(\"WorldWide\");*/\n  const onChangeCountry = async (e) => {\n    const countryCode = e.target.value;\n    const urlCards = (countryCode === \"WorldWide\" ? `https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true` :\n      `https://disease.sh/v3/covid-19/countries/${countryCode}?yesterday=false&twoDaysAgo=false&strict=false&allowNull=false`)\n    const resultOption = await axios(urlCards);\n    setCardData(resultOption.data);\n    setMapCenter(countryCode === \"WorldWide\" ? [37.80746, -80.4796] : [resultOption.data.countryInfo.lat, resultOption.data.countryInfo.long]);\n    setMapZoom(4);\n    setIsLoadingCard(false);\n    const urlLineData = (countryCode === \"WorldWide\" ? `https://disease.sh/v3/covid-19/historical/all?lastdays=210` :\n      `https://disease.sh/v3/covid-19/historical/${countryCode}?lastdays=210`);\n    const resultLine = await axios(urlLineData);\n    setLineData(resultLine.data);\n    setHistoricalDeaths(countryCode === \"WorldWide\" ? [Object.values(resultLine.data.deaths)[1], Object.values(resultLine.data.deaths)[30], Object.values(resultLine.data.deaths)[60],\n      Object.values(resultLine.data.deaths)[90], Object.values(resultLine.data.deaths)[120], Object.values(resultLine.data.deaths)[150], Object.values(resultLine.data.deaths)[180],\n      Object.values(resultLine.data.deaths)[209]] : \n      [Object.values(resultLine.data.timeline.deaths)[1], Object.values(resultLine.data.timeline.deaths)[30], Object.values(resultLine.data.timeline.deaths)[60],\n      Object.values(resultLine.data.timeline.deaths)[90], Object.values(resultLine.data.timeline.deaths)[120], Object.values(resultLine.data.timeline.deaths)[150],\n      Object.values(resultLine.data.timeline.deaths)[180], Object.values(resultLine.data.timeline.deaths)[210]])\n    \n   /* console.log(e.target.value);\n    await setSelectedCountry(e.target.value).then(() => {\n      console.log(selectedCountry);\n      setGetCardInfos(selectedCountry === \"WorldWide\" ? `https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true` :\n        `https://disease.sh/v3/covid-19/countries/${selectedCountry}?yesterday=true&twoDaysAgo=true&strict=true&allowNull=true`)\n    }).then(async () => {\n      console.log(getCardInfos);\n      const resultOption = await axios(getCardInfos)\n      setCardData(resultOption.data)\n      setIsLoadingCard(false);\n      console.log(cardData);\n    })\n    */\n  }\n\n  useEffect(async () => {\n    const result = await axios(`https://disease.sh/v3/covid-19/countries?yesterday=true&twoDaysAgo=true&sort=active&allowNull=true`);\n    setCountries(result.data);\n    setIsLoadingTable(false);\n    const resultOption = await axios(`https://disease.sh/v3/covid-19/all?yesterday=true&twoDaysAgo=true&allowNull=true`);\n    setCardData(resultOption.data);\n    setIsLoadingCard(false);\n    onChangeCountry()\n  }, []);\n  return (\n    <>\n        <Container fluid={true}>\n          <Row className=\"my-4\">\n            <Col xs={12} md={6}>\n              <Row>\n                <Col xs={12} sm={8}>\n                  <h1 className=\"text-center\">COVID-19 TRACKER</h1>\n                </Col>\n                <Col xs={12} sm={4}>\n                  <FormControl countries={countries} onChangeCountry={onChangeCountry}/>\n                </Col>\n                <Col xs={12}>\n                  <HeaderCards cardData={cardData} isLoadingCard={isLoadingCard}/>\n                </Col>\n              </Row>\n              <MapLeaflet mapCenter = {mapCenter} mapZoom={mapZoom}/>\n            </Col>\n            <Col xs={12} md={6}>\n              <div className=\"tableDiv\">\n                <Table className=\"tableComponent\">\n                  <CasesByCountry countries={countries} isLoadingTable={isLoadingTable}/>\n                </Table>\n              </div>\n              <LineGraph lineData = {lineData} historicalDeaths ={historicalDeaths}/>\n            </Col>\n          </Row>\n        </Container>\n    </>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}